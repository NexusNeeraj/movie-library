{"version":3,"sources":["components/StartingPage/MoviesList.module.css","components/Auth/AuthForm.module.css","components/Collection/MovieCollection.module.css","components/Profile/ProfileForm.module.css","components/Layout/MainNavigation.module.css","components/Profile/UserProfile.module.css","components/StartingPage/StartingPageContent.module.css","store/auth-context.js","components/Layout/MainNavigation.js","components/Layout/Layout.js","components/Profile/ProfileForm.js","components/Profile/UserProfile.js","components/Auth/AuthForm.js","pages/AuthPage.js","components/StartingPage/StartingPageContent.js","store/MovieContext.js","components/StartingPage/MoviesList.js","pages/HomePage.js","components/Collection/MovieCollection.js","pages/CollectionPage.js","App.js","index.js"],"names":["module","exports","AuthContext","React","createContext","token","isLoggedIn","login","logout","AuthContextProvider","props","initialToken","localStorage","getItem","setToken","useState","contextValue","setItem","logoutHandler","removeItem","_jsx","Provider","value","children","MainNavigation","authCtx","useContext","_jsxs","className","classes","header","Link","to","logo","onClick","Layout","Fragment","ProfileForm","history","useHistory","newPasswordInputRef","useRef","form","onSubmit","event","preventDefault","enteredNewPassword","current","fetch","method","body","JSON","stringify","idToken","password","returnSecureToken","headers","then","res","replace","control","htmlFor","type","id","minLength","ref","action","UserProfile","profile","AuthForm","emailInputRef","passwordInputRef","isLogin","setIsLogin","isLoading","setIsLoading","auth","enteredEmail","enteredPassword","url","email","ok","json","data","Error","catch","err","alert","message","required","actions","toggle","switchAuthModeHandler","prevState","AuthPage","StartingPageContent","starting","MovieContext","collection","addToCollection","movie","MovieProvider","_ref","setCollection","prevCollection","some","m","imdbID","MoviesList","movies","searchMovies","query","setQuery","noMoviesFound","styles","moviesListContainer","searchContainer","onChange","e","target","placeholder","searchInput","searchButton","moviesContainer","style","color","fontSize","map","movieCard","movieTitle","Title","movieYear","Year","Poster","src","alt","moviePoster","addButton","HomePage","setMovies","setNoMoviesFound","useEffect","fetchMovies","async","response","axios","get","Search","length","error","console","concat","Response","textAlign","MovieCollection","collectionContainer","collectionList","collectionItem","collectionPoster","CollectionPage","App","Switch","Route","path","exact","Redirect","ReactDOM","render","BrowserRouter","document","getElementById"],"mappings":"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","file":"static/js/main.c93d8228.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"moviesListContainer\":\"MoviesList_moviesListContainer__2s1C1\",\"searchContainer\":\"MoviesList_searchContainer__2aokP\",\"searchInput\":\"MoviesList_searchInput__sFUSR\",\"searchButton\":\"MoviesList_searchButton__23yfT\",\"moviesContainer\":\"MoviesList_moviesContainer__1TZN0\",\"movieCard\":\"MoviesList_movieCard__3nJgF\",\"moviePoster\":\"MoviesList_moviePoster__Z4AK-\",\"movieTitle\":\"MoviesList_movieTitle__CN2CG\",\"movieYear\":\"MoviesList_movieYear__2ggcp\",\"addButton\":\"MoviesList_addButton__3GLaD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"auth\":\"AuthForm_auth__2s33e\",\"control\":\"AuthForm_control__26jMp\",\"actions\":\"AuthForm_actions__1bWBc\",\"toggle\":\"AuthForm_toggle__1Ei5A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"collectionContainer\":\"MovieCollection_collectionContainer__V4_uX\",\"collectionList\":\"MovieCollection_collectionList__2QX7z\",\"collectionItem\":\"MovieCollection_collectionItem__3bki2\",\"collectionPoster\":\"MovieCollection_collectionPoster__2DQ2g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ProfileForm_form__1MgSq\",\"control\":\"ProfileForm_control__2A3kj\",\"action\":\"ProfileForm_action__3nghk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainNavigation_header__3_VGt\",\"logo\":\"MainNavigation_logo__1QS5x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"UserProfile_profile__28SlA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"starting\":\"StartingPageContent_starting__36k-Q\"};","import React, { useState } from \"react\";\r\n\r\nconst AuthContext = React.createContext({\r\n  token: '',\r\n  isLoggedIn: false,\r\n  login: (token) => {},\r\n  logout: () => {},\r\n});\r\n\r\nexport const AuthContextProvider = (props) => {\r\n  const initialToken = localStorage.getItem('token');\r\n  const [token, setToken] = useState(initialToken);\r\n\r\n  const userIsLoggedIn = !!token;\r\n\r\n  const loginHandler = (token) => {\r\n    setToken(token);\r\n    localStorage.setItem('token', token);\r\n  };\r\n\r\n  const logoutHandler = () => {\r\n    setToken(null);\r\n    localStorage.removeItem('token');\r\n  };\r\n\r\n  const contextValue = {\r\n    token: token,\r\n    isLoggedIn: userIsLoggedIn,\r\n    login: loginHandler,\r\n    logout: logoutHandler,\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={contextValue}>\r\n      {props.children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthContext;\r\n","import { useContext } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport AuthContext from '../../store/auth-context';\nimport classes from './MainNavigation.module.css';\n\nconst MainNavigation = () => {\n  const authCtx = useContext(AuthContext);\n\n  const isLoggedIn = authCtx.isLoggedIn;\n\n  const logoutHandler = () => {\n    authCtx.logout(); \n    // optional: redirect the user\n  }\n\n  return (\n    <header className={classes.header}>\n      <Link to='/'>\n        <div className={classes.logo}>Movie App</div>\n      </Link>\n      <nav>\n        <ul>\n          {!isLoggedIn && (\n            <li>\n              <Link to='/auth'>Login</Link>\n            </li>\n          )}\n          {isLoggedIn && (\n            <li>\n              <Link to='/collection'>Collection</Link>\n            </li>\n          )}\n          {isLoggedIn && (\n            <li>\n              <Link to='/profile'>Profile</Link>\n            </li>\n          )}\n          {isLoggedIn && (\n            <li>\n              <button onClick={logoutHandler}>Logout</button>\n            </li>\n          )}\n        </ul>\n      </nav>\n    </header>\n  );\n};\n\nexport default MainNavigation;\n","import { Fragment } from 'react';\n\nimport MainNavigation from './MainNavigation';\n\nconst Layout = (props) => {\n  return (\n    <Fragment>\n      <MainNavigation />\n      <main>{props.children}</main>\n    </Fragment>\n  );\n};\n\nexport default Layout;\n","import { useRef, useContext } from 'react';\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom.min';\n\nimport AuthContext from '../../store/auth-context';\nimport classes from './ProfileForm.module.css';\n\nconst ProfileForm = () => {\n  const history = useHistory();\n  const newPasswordInputRef = useRef();\n\n  const authCtx = useContext(AuthContext);\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n\n    const enteredNewPassword = newPasswordInputRef.current.value;\n\n    // add password validation\n\n    fetch('https://identitytoolkit.googleapis.com/v1/accounts:update?key=AIzaSyA1l_ODO_JiNoEnRF6NSFe_ShKC_NlEPcM', {\n      method: 'POST',\n      body: JSON.stringify({\n        idToken: authCtx.token,\n        password: enteredNewPassword,\n        returnSecureToken: false\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => {\n      // assumption: always succeeds!\n      history.replace('/');\n    });\n  };\n\n  return (\n    <form className={classes.form} onSubmit={submitHandler}>\n      <div className={classes.control}>\n        <label htmlFor='new-password'>New Password</label>\n        <input type='password' id='new-password' minLength=\"7\" ref={newPasswordInputRef}/>\n      </div>\n      <div className={classes.action}>\n        <button>Change Password</button>\n      </div>\n    </form>\n  );\n}\n\nexport default ProfileForm;\n","import ProfileForm from './ProfileForm';\nimport classes from './UserProfile.module.css';\n\nconst UserProfile = () => {\n  return (\n    <section className={classes.profile}>\n      <h1>User Profile</h1>\n      <ProfileForm />\n    </section>\n  );\n};\n\nexport default UserProfile;\n","import { useState, useRef, useContext } from 'react';\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom.min';\n\nimport AuthContext from '../../store/auth-context';\nimport classes from './AuthForm.module.css';\n\nconst AuthForm = () => {\n  const history = useHistory();\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n\n  const authCtx = useContext(AuthContext);\n\n  const [isLogin, setIsLogin] = useState(true);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const switchAuthModeHandler = () => {\n    setIsLogin((prevState) => !prevState);\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n\n    const enteredEmail = emailInputRef.current.value;\n    const enteredPassword = passwordInputRef.current.value;\n\n    //add validation\n\n    setIsLoading(true);\n    let url;\n    if(isLogin){\n      url = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyA1l_ODO_JiNoEnRF6NSFe_ShKC_NlEPcM';\n    } else {\n      url = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyA1l_ODO_JiNoEnRF6NSFe_ShKC_NlEPcM';\n    }\n    fetch(url,\n      {\n        method: 'POST',\n        body: JSON.stringify({\n          email: enteredEmail,\n          password: enteredPassword,\n          returnSecureToken: true\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        },\n      }\n    ).then((res) => {\n      setIsLoading(false);\n      if(res.ok){\n        return res.json();\n      } else{\n        return res.json().then((data) =>{\n          //show an error modal\n          let errorMessage = 'Authentication Failed!';\n          // if(data && data.error && data.error.message){\n          //   errorMessage = data.error.message;\n          // }\n          throw new Error(errorMessage);\n        });\n      }\n    })\n    .then((data) => {\n      authCtx.login(data.idToken);\n      history.replace('/');\n    })\n\n    .catch((err) => {\n      alert(err.message);\n    });\n    \n    \n\n    \n  };\n\n  return (\n    <section className={classes.auth}>\n      <h1>{isLogin ? 'Login' : 'Sign Up'}</h1>\n      <form onSubmit={submitHandler}>\n        <div className={classes.control}>\n          <label htmlFor='email'>Your Email</label>\n          <input type='email' id='email' required ref={emailInputRef}/>\n        </div>\n        <div className={classes.control}>\n          <label htmlFor='password'>Your Password</label>\n          <input type='password' id='password' required ref={passwordInputRef}/>\n        </div>\n        <div className={classes.actions}>\n          {!isLoading && <button>{isLogin ? 'Login' : 'Create Account'}</button>}\n          {isLoading && <p>Sending request...</p>}\n          <button\n            type='button'\n            className={classes.toggle}\n            onClick={switchAuthModeHandler}\n          >\n            {isLogin ? 'Create new account' : 'Login with existing account'}\n          </button>\n        </div>\n      </form>\n    </section>\n  );\n};\n\nexport default AuthForm;\n","import AuthForm from '../components/Auth/AuthForm';\n\nconst AuthPage = () => {\n  return <AuthForm />;\n};\n\nexport default AuthPage;\n","import classes from './StartingPageContent.module.css';\n\nconst StartingPageContent = () => {\n  return (\n    <section className={classes.starting}>\n      <h4>Welcome to the Movie Library</h4>\n      <p>Search for your favorite movies and see the details.</p>\n    </section>\n  );\n};\n\nexport default StartingPageContent;\n","import React, { useState } from 'react';\r\n\r\nconst MovieContext = React.createContext({\r\n  collection: [],\r\n  addToCollection: (movie) => {}\r\n});\r\n\r\nexport const MovieProvider = ({ children }) => {\r\n  const [collection, setCollection] = useState([]);\r\n\r\n  const addToCollection = (movie) => {\r\n    setCollection((prevCollection) => {\r\n      if (!prevCollection.some((m) => m.imdbID === movie.imdbID)) {\r\n        return [...prevCollection, movie];\r\n      }\r\n      return prevCollection;\r\n    });\r\n  };\r\n\r\n  return (\r\n    <MovieContext.Provider value={{ collection, addToCollection }}>\r\n      {children}\r\n    </MovieContext.Provider>\r\n  );\r\n};\r\n\r\nexport default MovieContext;\r\n","import React, { useContext } from 'react';\r\n\r\nimport MovieContext from '../../store/MovieContext';\r\nimport styles from './MoviesList.module.css'; \r\n\r\nconst MoviesList = ({ movies, searchMovies, query, setQuery, noMoviesFound}) => {\r\n  const { addToCollection } = useContext(MovieContext);\r\n\r\n  return (\r\n    <div className={styles.moviesListContainer}>\r\n      <div className={styles.searchContainer}>\r\n        <input\r\n          type=\"text\"\r\n          value={query}\r\n          onChange={(e) => setQuery(e.target.value)}\r\n          placeholder=\"Search for movies...\"\r\n          className={styles.searchInput}\r\n        />\r\n        <button onClick={searchMovies} className={styles.searchButton}>Search</button>\r\n      </div>\r\n      <div className={styles.moviesContainer}>\r\n        {noMoviesFound ? (<p style={{color:'black', fontSize:'1.5rem'}}>No Movies Found.</p>) : (movies.map(movie => (\r\n          <div key={movie.imdbID} className={styles.movieCard}>\r\n            <h3 className={styles.movieTitle}>{movie.Title}</h3>\r\n            <p className={styles.movieYear}>{movie.Year}</p>\r\n            {movie.Poster !== 'N/A' && <img src={movie.Poster} alt={movie.Title} className={styles.moviePoster} />}\r\n            <button onClick={() => addToCollection(movie)} className={styles.addButton}>Add to Collection</button>\r\n          </div>\r\n        )))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MoviesList;\r\n","import { Fragment, useState, useEffect } from 'react';\nimport axios from 'axios';\n\nimport StartingPageContent from '../components/StartingPage/StartingPageContent';\nimport MoviesList from '../components/StartingPage/MoviesList';\n\nconst HomePage = (props) => {\n  const [query, setQuery] = useState('');\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [noMoviesFound, setNoMoviesFound] = useState(false);\n\n  useEffect(() => { \n    fetchMovies();\n  }, []);\n\n\n  const fetchMovies = async () => {\n    setIsLoading(true);\n    try {\n      const response = await axios.get(`http://www.omdbapi.com/?apikey=a8c159e&s=Batman`);\n      //console.log(response.data);\n      setMovies(response.data.Search || []);\n      setNoMoviesFound(!response.data.Search || response.data.Search.length === 0);\n      setIsLoading(false);\n    } catch (error) {\n      console.error('Error fetching data from OMDb API', error);\n    }\n  };\n\n  \n\n  const searchMovies = async () => {\n    try {\n      const response = await axios.get(`http://www.omdbapi.com/?apikey=a8c159e&s=${query}`);\n      //console.log(response.data);\n      if(response.data.Response === 'False'){\n        setNoMoviesFound(true);\n        setMovies([]);\n      }else{\n        setNoMoviesFound(false);\n        setMovies(response.data.Search || []);\n      }\n    } catch (error) {\n      console.error('Error fetching data from OMDb API', error);\n    }\n  };\n\n  return (\n    <Fragment>\n      <StartingPageContent />\n      {!isLoading && <MoviesList movies={movies} searchMovies={searchMovies} query={query} setQuery={setQuery} noMoviesFound={noMoviesFound} />}\n      {isLoading && <p style={{textAlign: 'center', fontSize: '3rem'}}>Loading...</p>}\n    </Fragment>\n  );\n};\n\nexport default HomePage;\n","import React, { useContext } from 'react';\r\n\r\nimport MovieContext from '../../store/MovieContext';\r\nimport classes from './MovieCollection.module.css';\r\n\r\nconst MovieCollection = () => {\r\n  const { collection } = useContext(MovieContext);\r\n\r\n  return (\r\n    <div className={classes.collectionContainer}>\r\n      <h2>Your Movie Collection</h2>\r\n      {collection.length === 0 ? (\r\n        <p>No Movies in Collection.</p>\r\n      ) : (\r\n        <ul className={classes.collectionList}>\r\n          {collection.map((movie) => (\r\n            <li key={movie.imdbID} className={classes.collectionItem}>\r\n              <h3>{movie.Title}</h3>\r\n              <p>{movie.Year}</p>\r\n              {movie.Poster !== 'N/A' && <img src={movie.Poster} alt={movie.Title} className={classes.collectionPoster} />}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieCollection;\r\n","import MovieCollection from '../components/Collection/MovieCollection';\r\n\r\nconst CollectionPage = () => {\r\n  return <MovieCollection />\r\n};\r\n\r\nexport default CollectionPage;","import { useContext } from \"react\";\nimport {\n  Redirect,\n  Route,\n  Switch,\n} from \"react-router-dom/cjs/react-router-dom.min\";\n\nimport Layout from \"./components/Layout/Layout\";\nimport UserProfile from \"./components/Profile/UserProfile\";\nimport AuthPage from \"./pages/AuthPage\";\nimport HomePage from \"./pages/HomePage\";\nimport AuthContext from \"./store/auth-context\";\nimport CollectionPage from \"./pages/CollectionPage\";\nimport { MovieProvider } from \"./store/MovieContext\";\n\nfunction App() {\n  const authCtx = useContext(AuthContext);\n\n  return (\n    <MovieProvider>\n      <Layout>\n        <Switch>\n          {authCtx.isLoggedIn && (\n            <Route path=\"/\" exact>\n              <HomePage />\n            </Route>\n          )}\n          {!authCtx.isLoggedIn && (\n            <Route path=\"/auth\">\n              <AuthPage />\n            </Route>\n          )}\n          <Route path=\"/profile\">\n            {authCtx.isLoggedIn && <UserProfile />}\n            {!authCtx.isLoggedIn && <Redirect to=\"/auth\" />}\n          </Route>\n          {authCtx.isLoggedIn && (\n            <Route path=\"/collection\">\n              <CollectionPage />\n            </Route>\n          )}\n          <Route path=\"*\">\n            <Redirect to=\"/auth\" />\n          </Route>\n        </Switch>\n      </Layout>\n    </MovieProvider>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport './index.css';\nimport App from './App';\nimport { AuthContextProvider } from './store/auth-context';\n\nReactDOM.render(\n  <AuthContextProvider>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </AuthContextProvider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}